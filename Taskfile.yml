version: '3'

dotenv: [ '.env' ]

tasks:
  default:
    silent: true
    cmd: task --list-all

  format:
    cmds:
      - go fmt ./...

  test:
    cmds:
      - go test -v ./...

  test-acc:
    env:
      TF_ACC: 1
    cmds:
      - go test -v ./...

  generate:
    cmds:
      - go run github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen --config=oapi-config.yaml ./openapi.yaml
      - go generate ./...

  build-local:
    cmds:
      - go build -o terraform-provider-contentful_{{ .VERSION }}
      - mkdir -p ~/.terraform.d/plugins/registry.terraform.io/labd/contentful/{{ .VERSION }}/{{ .PLATFORM }}/
      - mv terraform-provider-contentful_{{ .VERSION }} ~/.terraform.d/plugins/registry.terraform.io/labd/contentful/{{ .VERSION }}/{{ .PLATFORM }}/terraform-provider-contentful_v{{ .VERSION }}
      - cmd: codesign --deep --force -s - ~/.terraform.d/plugins/registry.terraform.io/labd/contentful/{{ .VERSION }}/{{ .PLATFORM }}/terraform-provider-contentful_v{{ .VERSION }}
        platforms: [ darwin ]
    vars:
      VERSION: 99.0.0
      PLATFORM:
        sh: echo "$(go env GOOS)_$(go env GOARCH)"

  build:
    env:
      GORELEASER_CURRENT_TAG: "v0.0.0"
    cmd: goreleaser build --snapshot --clean --single-target --output terraform-provider-contentful

  coverage:
    cmds:
      - go test -race -coverprofile=coverage.txt -covermode=atomic -coverpkg=./... ./...
      - go tool cover -func=coverage.txt
